@model EPrescription.Web.Models.PrescriptionModel
@using EPrescription.Common
@{
    ViewBag.Title = "Add";
}
<style>
    .input-sm-x {
        height: 30px;
        padding: 5px 10px;
        font-size: 12px;
        line-height: 1.5;
        border-radius: 3px;
    }
</style>
@Styles.Render("~/Content/select2")
<div class="content-wrapper">
    <!-- Main content -->
    <section class="content">
        @using (Html.BeginForm("Add", "Prescription", FormMethod.Post, new { @class = "form-horizontal", @enctype = "multipart/form-data", @id = "prescriptionForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Patient.Id)
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Prescription</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <a href="@Url.Action("Index", "Prescription")" class="btn btn-box-tool" title="Cancel">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <table class="table table-bordered">
                                <tr>
                                    <td colspan="10" class="alert-success">
                                        Patient Details
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.LabelFor(model => model.Patient.PatientNo)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.Patient.PatientNo)
                                    </td>
                                    <td>
                                        @Html.LabelFor(model => model.Patient.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.Patient.Name)
                                    </td>
                                    <td>
                                        @Html.LabelFor(model => model.Patient.Age)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.Patient.Age)
                                    </td>
                                    <td>
                                        @Html.LabelFor(model => model.Patient.Gender)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.Patient.Gender)
                                    </td>
                                    <td>
                                        @Html.LabelFor(model => model.Patient.BirthDate)
                                    </td>
                                    <td>
                                        @Model.Patient.BirthDate.DateFormat()
                                    </td>

                                </tr>
                                <tr>
                                    <td>
                                        @Html.LabelFor(model => model.Patient.GeneralDetail.Height)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.Patient.GeneralDetail.Height)
                                    </td>
                                    <td>
                                        @Html.LabelFor(model => model.Patient.GeneralDetail.Weigth)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.Patient.GeneralDetail.Weigth)
                                    </td>
                                    <td>
                                        @Html.LabelFor(model => model.Patient.GeneralDetail.BP)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.Patient.GeneralDetail.BP)
                                    </td>
                                    <td>
                                        @Html.LabelFor(model => model.Patient.GeneralDetail.Pulse)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.Patient.GeneralDetail.Pulse)
                                    </td>
                                    <td>
                                        @Html.LabelFor(model => model.Patient.GeneralDetail.Temp)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.Patient.GeneralDetail.Temp)
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-3">
                            @if (Model.Patient.PatientComplaints.Any())
                            {
                                int pcNo = 1;
                                <table class="table table-bordered table-striped">
                                    <thead>
                                        <tr class="alert-success">
                                            <td colspan="3">Patient Complaints</td>
                                        </tr>
                                        <tr>
                                            <td>SL.</td>
                                            <td>Complaint</td>
                                            <td>Remarks</td>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @foreach (var complaint in Model.Patient.PatientComplaints)
                                        {
                                            <tr>
                                                <td>@(pcNo++)</td>
                                                <td>@Html.DisplayFor(complaintItem => complaint.Complaint)</td>
                                                <td>@Html.DisplayFor(complaintItem => complaint.Remarks)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            @if (Model.Patient.PatientDiseases.Any())
                            {
                                int pcNo = 1;
                                <table class="table table-bordered table-striped">
                                    <thead>
                                        <tr class="alert-success">
                                            <td colspan="3">Patient Diseases</td>
                                        </tr>
                                        <tr>
                                            <td>SL.</td>
                                            <td>Disease Name</td>
                                            <td>Remarks</td>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @foreach (var disease in Model.Patient.PatientDiseases)
                                        {
                                            <tr>
                                                <td>@(pcNo++)</td>
                                                <td>@Html.DisplayFor(diseaseItem => disease.Disease)</td>
                                                <td>@Html.DisplayFor(diseaseItem => disease.Remarks)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            @if (Model.Patient.PatientProcedures.Any())
                            {
                                int pcNo = 1;
                                <table class="table table-bordered table-striped">
                                    <thead>
                                        <tr class="alert-success">
                                            <td colspan="3">Patient Procedures</td>
                                        </tr>
                                        <tr>
                                            <td>SL.</td>
                                            <td>Procedure Name</td>
                                            <td>Remarks</td>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @foreach (var procedure in Model.Patient.PatientProcedures)
                                        {
                                            <tr>
                                                <td>@(pcNo++)</td>
                                                <td>@Html.DisplayFor(procedureItem => procedure.Procedure)</td>
                                                <td>@Html.DisplayFor(procedureItem => procedure.Remarks)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                        </div>
                        <div class="col-md-9">

                            <datalist id="medicine-list">
                                @foreach (var medicine in Model.MedicineList)
                                {
                                    var name = medicine.BrandName + " (" + string.Join("+", medicine.GenericNameMedicineRelations.Select(s => s.GenericName.TypeName)) + ")";
                                    <option value="@medicine.BrandName" label="@name" />
                                }

                            </datalist>
                            <datalist id="availablity-list"></datalist>
                            <datalist id="duration-unit-list">
                                <option value="Day"></option>
                                <option value="Month"></option>
                                <option value="Year"></option>
                            </datalist>
                            <datalist id="dosage-comment-list">
                                @foreach (var dosageComment in Model.DosageComments)
                                {
                                    <option value="@dosageComment.CommentType"></option>
                                }
                            </datalist>
                            
                            <table class="table table-bordered">
                                <thead>
                                    <tr class="alert-success">
                                        <th width="30%">Medicine Name</th>
                                        <th width="12%">Availability</th>
                                        <th width="12%">Dosage</th>
                                        <th>Dosage Comment</th>
                                        <th>Duration</th>
                                        <th>Duration Unit</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="medicineTbody">
                                    @if (Model.PatientMedicineList != null && Model.PatientMedicineList.Any())
                                    {
                                        for (int i = 0; i < Model.PatientMedicineList.Count; i++)
                                        {
                                            <tr>
                                                <td width="30%">
                                                    @Html.TextBoxFor(model => model.PatientMedicineList[i].Medicine, new { @class = "form-control input-sm", @list = "medicine-list", @onchange = "LoadAvailablity(this)", @autocomplete = "off" })
                                                </td>
                                                <td width="12%">
                                                    @Html.TextBoxFor(model => model.PatientMedicineList[i].Avaiablity, new { @class = "form-control input-sm", @list = "availability-list", @autocomplete = "off" })
                                                </td>
                                                <td width="12%">
                                                    @Html.TextBoxFor(model => model.PatientMedicineList[i].Dosage, new { @class = "form-control input-sm dosage" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(model => model.PatientMedicineList[i].DosageComment, new { @class = "form-control input-sm", @list = "dosage-comment-list", @autocomplete = "off" })
                                                </td>
                                                <td width="12%">
                                                    @Html.TextBoxFor(model => model.PatientMedicineList[i].Duration, new { @class = "form-control input-sm", @type = "number", @autocomplete = "off" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(model => model.PatientMedicineList[i].DurationUnit, new { @class = "form-control input-sm", @list = "duration-unit-list", @autocomplete = "off" })
                                                </td>
                                                <td>
                                                    <button class="btn btn-danger btn-sm" onclick="RemoveTr(this)"><i class="fa fa-trash"></i></button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="6"></td>
                                        <td>
                                            <span class="btn btn-success btn-sm" onclick="AddNewRow()"><i class="fa fa-plus-circle"></i></span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="7">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Investigations, new { @class = "col-sm-5 EPres-control-label" })
                                                <div class="col-sm-7">
                                                    @Html.ListBoxFor(
                                                        model => model.InvestigationIds,
                                                        new MultiSelectList(Model.InvestigationList, "Id", "InvestigationName", Model.InvestigationIds),
                                                        new { @class = "form-control select2", @id = "InvestigationIds", @multiple = "multiple" }
                                                    )
                                                    @Html.ValidationMessageFor(model => model.InvestigationIds)
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                </tfoot>
                            </table>

                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <a href="@Url.Action("Index","Medicine")" class="btn btn-danger">Cancel</a>
                    <button type="button" onclick="formSubmit()" class="btn btn-info pull-right">Save</button>
                </div>
            </div>
        }
        <!-- /.box -->
    </section>
    <!-- /.content -->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery-val")
    @Scripts.Render("~/bundles/ajaxCall")
    @Scripts.Render("~/bundles/input-mask")
    @Scripts.Render("~/bundles/select2")
<script>
    $(document).ready(function () {
        $(".select2").select2({
            placeholder: "---Select---",
            allowClear: true,
            width: '100%'
        });
    });

    function UpdateInvestigations() {
        //var investigationIds = $('#InvestigationIds').val();
        //console.log("Selected Investigation IDs:", investigationIds);
        /*$('#InvestigationIdsHidden').remove();*/

        // Create a new hidden input and append it to the form
        //$('<input>').attr({
        //    type: 'hidden',
        //    id: 'InvestigationIdsHidden',
        //    name: 'InvestigationIds',
        //    value: investigationIds ? investigationIds.join(',') : ''
        //}).appendTo('#prescriptionForm');

        /*console.log("Hidden input added with value:", $('#InvestigationIdsHidden').val());*/
    }

    AssignInputMask();

    function LoadAvailablity(obj) {
        var name = $(obj).val();
        var availabilityListId = $(obj).closest('tr').find("input[name$='.Avaiablity']").attr("list");
        $(obj).closest('tr').find("[name$='.Avaiablity']").val('');
        $("#" + availabilityListId).empty();

        if (name && name.trim() !== '') {
            var url = '@Url.Action("LoadAvailablity", "Medicine")';
            var paramData = { medicineName: name };
            $.ajax({
                url: url,
                type: "GET",
                data: paramData,
                success: function (response) {
                    if (response && response.list && response.list.length > 0) {
                        rendeLoadAvailablity(response.list, availabilityListId);
                    } else {
                        console.log("No availability data found for the medicine.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error loading availability: ", error);
                }
            });
        } else {
            console.log("Medicine name is empty or invalid.");
        }
    }

    function rendeLoadAvailablity(data, availabilityListId) {
        $("#" + availabilityListId).empty();
        $(data).each(function () {
            $("#" + availabilityListId).append($("<option>").val(this).text(this));
        });
    }

    function AddNewRow() {
        var rowCount = $('#medicineTbody tr').length;
        var availabilityListId = `availability-list-${rowCount}`;
        var rowHtml = `
        <tr>
            <td width="30%">
                <input autocomplete="off" class="form-control input-sm" name="PatientMedicineList[${rowCount}].Medicine" list="medicine-list" onchange="LoadAvailablity(this)" type="text">
            </td>
            <td width="12%">
                <input autocomplete="off" class="form-control input-sm" name="PatientMedicineList[${rowCount}].Avaiablity" list="${availabilityListId}" type="text">
                <datalist id="${availabilityListId}"></datalist>
            </td>
            <td width="12%">
                <input autocomplete="off" class="form-control input-sm dosage" name="PatientMedicineList[${rowCount}].Dosage" type="text">
            </td>
            <td>
                <input autocomplete="off" class="form-control input-sm" name="PatientMedicineList[${rowCount}].DosageComment" list="dosage-comment-list" type="text">
            </td>
            <td width="12%">
                <input autocomplete="off" class="form-control input-sm" name="PatientMedicineList[${rowCount}].Duration" type="number">
            </td>
            <td>
                <input autocomplete="off" class="form-control input-sm" name="PatientMedicineList[${rowCount}].DurationUnit" list="duration-unit-list" type="text">
            </td>
            <td>
                <button class="btn btn-danger btn-sm" onclick="RemoveTr(this)"><i class="fa fa-trash"></i></button>
            </td>
        </tr>`;
        $("#medicineTbody").append(rowHtml);
        AssignInputMask();
    }

    function RemoveTr(obj) {
        $(obj).closest('tr').remove();
        UpdateRowIndices();
    }

    function UpdateRowIndices() {
        $('#medicineTbody tr').each(function (index, row) {
            $(row).find(':input').each(function () {
                var oldName = $(this).attr('name');
                if (oldName) {
                    var newName = oldName.replace(/\[\d+\]/, `[${index}]`);
                    $(this).attr('name', newName);
                }
            });
        });
    }

    function AssignInputMask() {
        $('.dosage').inputmask({ "mask": "9-9-9" })
        $('[data-mask]').inputmask({ "mask": "9-9-9" })
    }
    function formSubmit() {
        UpdateRowIndices();
        UpdateInvestigations();
        $("#prescriptionForm").submit();
    }
</script>
}






